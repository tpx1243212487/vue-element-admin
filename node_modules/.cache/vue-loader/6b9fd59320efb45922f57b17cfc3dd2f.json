{"remainingRequest":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\permission\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\permission\\role.vue","mtime":1636272798282},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcGF0aCBmcm9tICdwYXRoJw0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQC91dGlscycNCmltcG9ydCB7IGdldFJvdXRlcywgZ2V0Um9sZXMsIGFkZFJvbGUsIGRlbGV0ZVJvbGUsIHVwZGF0ZVJvbGUgfSBmcm9tICdAL2FwaS9yb2xlJw0KDQpjb25zdCBkZWZhdWx0Um9sZSA9IHsNCiAga2V5OiAnJywNCiAgbmFtZTogJycsDQogIGRlc2NyaXB0aW9uOiAnJywNCiAgcm91dGVzOiBbXQ0KfQ0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHJvbGU6IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRSb2xlKSwNCiAgICAgIHJvdXRlczogW10sDQogICAgICByb2xlc0xpc3Q6IFtdLA0KICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICBkaWFsb2dUeXBlOiAnbmV3JywNCiAgICAgIGNoZWNrU3RyaWN0bHk6IGZhbHNlLA0KICAgICAgZGVmYXVsdFByb3BzOiB7DQogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLA0KICAgICAgICBsYWJlbDogJ3RpdGxlJw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICByb3V0ZXNEYXRhKCkgew0KICAgICAgcmV0dXJuIHRoaXMucm91dGVzDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIC8vIE1vY2s6IGdldCBhbGwgcm91dGVzIGFuZCByb2xlcyBsaXN0IGZyb20gc2VydmVyDQogICAgdGhpcy5nZXRSb3V0ZXMoKQ0KICAgIHRoaXMuZ2V0Um9sZXMoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0Um91dGVzKCkgew0KICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0Um91dGVzKCkNCiAgICAgIHRoaXMuc2VydmljZVJvdXRlcyA9IHJlcy5kYXRhDQogICAgICB0aGlzLnJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVSb3V0ZXMocmVzLmRhdGEpDQogICAgfSwNCiAgICBhc3luYyBnZXRSb2xlcygpIHsNCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFJvbGVzKCkNCiAgICAgIHRoaXMucm9sZXNMaXN0ID0gcmVzLmRhdGENCiAgICB9LA0KDQogICAgLy8gUmVzaGFwZSB0aGUgcm91dGVzIHN0cnVjdHVyZSBzbyB0aGF0IGl0IGxvb2tzIHRoZSBzYW1lIGFzIHRoZSBzaWRlYmFyDQogICAgZ2VuZXJhdGVSb3V0ZXMocm91dGVzLCBiYXNlUGF0aCA9ICcvJykgew0KICAgICAgY29uc3QgcmVzID0gW10NCg0KICAgICAgZm9yIChsZXQgcm91dGUgb2Ygcm91dGVzKSB7DQogICAgICAgIC8vIHNraXAgc29tZSByb3V0ZQ0KICAgICAgICBpZiAocm91dGUuaGlkZGVuKSB7IGNvbnRpbnVlIH0NCg0KICAgICAgICBjb25zdCBvbmx5T25lU2hvd2luZ0NoaWxkID0gdGhpcy5vbmx5T25lU2hvd2luZ0NoaWxkKHJvdXRlLmNoaWxkcmVuLCByb3V0ZSkNCg0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgb25seU9uZVNob3dpbmdDaGlsZCAmJiAhcm91dGUuYWx3YXlzU2hvdykgew0KICAgICAgICAgIHJvdXRlID0gb25seU9uZVNob3dpbmdDaGlsZA0KICAgICAgICB9DQoNCiAgICAgICAgY29uc3QgZGF0YSA9IHsNCiAgICAgICAgICBwYXRoOiBwYXRoLnJlc29sdmUoYmFzZVBhdGgsIHJvdXRlLnBhdGgpLA0KICAgICAgICAgIHRpdGxlOiByb3V0ZS5tZXRhICYmIHJvdXRlLm1ldGEudGl0bGUNCg0KICAgICAgICB9DQoNCiAgICAgICAgLy8gcmVjdXJzaXZlIGNoaWxkIHJvdXRlcw0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4pIHsNCiAgICAgICAgICBkYXRhLmNoaWxkcmVuID0gdGhpcy5nZW5lcmF0ZVJvdXRlcyhyb3V0ZS5jaGlsZHJlbiwgZGF0YS5wYXRoKQ0KICAgICAgICB9DQogICAgICAgIHJlcy5wdXNoKGRhdGEpDQogICAgICB9DQogICAgICByZXR1cm4gcmVzDQogICAgfSwNCiAgICBnZW5lcmF0ZUFycihyb3V0ZXMpIHsNCiAgICAgIGxldCBkYXRhID0gW10NCiAgICAgIHJvdXRlcy5mb3JFYWNoKHJvdXRlID0+IHsNCiAgICAgICAgZGF0YS5wdXNoKHJvdXRlKQ0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4pIHsNCiAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy5nZW5lcmF0ZUFycihyb3V0ZS5jaGlsZHJlbikNCiAgICAgICAgICBpZiAodGVtcC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICBkYXRhID0gWy4uLmRhdGEsIC4uLnRlbXBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgcmV0dXJuIGRhdGENCiAgICB9LA0KICAgIGhhbmRsZUFkZFJvbGUoKSB7DQogICAgICB0aGlzLnJvbGUgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Um9sZSkNCiAgICAgIGlmICh0aGlzLiRyZWZzLnRyZWUpIHsNCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWROb2RlcyhbXSkNCiAgICAgIH0NCiAgICAgIHRoaXMuZGlhbG9nVHlwZSA9ICduZXcnDQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlDQogICAgfSwNCiAgICBoYW5kbGVFZGl0KHNjb3BlKSB7DQogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnZWRpdCcNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUNCiAgICAgIHRoaXMuY2hlY2tTdHJpY3RseSA9IHRydWUNCiAgICAgIHRoaXMucm9sZSA9IGRlZXBDbG9uZShzY29wZS5yb3cpDQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIGNvbnN0IHJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVSb3V0ZXModGhpcy5yb2xlLnJvdXRlcykNCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWROb2Rlcyh0aGlzLmdlbmVyYXRlQXJyKHJvdXRlcykpDQogICAgICAgIC8vIHNldCBjaGVja2VkIHN0YXRlIG9mIGEgbm9kZSBub3QgYWZmZWN0cyBpdHMgZmF0aGVyIGFuZCBjaGlsZCBub2Rlcw0KICAgICAgICB0aGlzLmNoZWNrU3RyaWN0bHkgPSBmYWxzZQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGhhbmRsZURlbGV0ZSh7ICRpbmRleCwgcm93IH0pIHsNCiAgICAgIHRoaXMuJGNvbmZpcm0oJ0NvbmZpcm0gdG8gcmVtb3ZlIHRoZSByb2xlPycsICdXYXJuaW5nJywgew0KICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ0NvbmZpcm0nLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICB9KQ0KICAgICAgICAudGhlbihhc3luYygpID0+IHsNCiAgICAgICAgICBhd2FpdCBkZWxldGVSb2xlKHJvdy5rZXkpDQogICAgICAgICAgdGhpcy5yb2xlc0xpc3Quc3BsaWNlKCRpbmRleCwgMSkNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgIG1lc3NhZ2U6ICdEZWxldGUgc3VjY2VkIScNCiAgICAgICAgICB9KQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZXJyID0+IHsgY29uc29sZS5lcnJvcihlcnIpIH0pDQogICAgfSwNCiAgICBnZW5lcmF0ZVRyZWUocm91dGVzLCBiYXNlUGF0aCA9ICcvJywgY2hlY2tlZEtleXMpIHsNCiAgICAgIGNvbnN0IHJlcyA9IFtdDQoNCiAgICAgIGZvciAoY29uc3Qgcm91dGUgb2Ygcm91dGVzKSB7DQogICAgICAgIGNvbnN0IHJvdXRlUGF0aCA9IHBhdGgucmVzb2x2ZShiYXNlUGF0aCwgcm91dGUucGF0aCkNCg0KICAgICAgICAvLyByZWN1cnNpdmUgY2hpbGQgcm91dGVzDQogICAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbikgew0KICAgICAgICAgIHJvdXRlLmNoaWxkcmVuID0gdGhpcy5nZW5lcmF0ZVRyZWUocm91dGUuY2hpbGRyZW4sIHJvdXRlUGF0aCwgY2hlY2tlZEtleXMpDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoY2hlY2tlZEtleXMuaW5jbHVkZXMocm91dGVQYXRoKSB8fCAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID49IDEpKSB7DQogICAgICAgICAgcmVzLnB1c2gocm91dGUpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHJldHVybiByZXMNCiAgICB9LA0KICAgIGFzeW5jIGNvbmZpcm1Sb2xlKCkgew0KICAgICAgY29uc3QgaXNFZGl0ID0gdGhpcy5kaWFsb2dUeXBlID09PSAnZWRpdCcNCg0KICAgICAgY29uc3QgY2hlY2tlZEtleXMgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZEtleXMoKQ0KICAgICAgdGhpcy5yb2xlLnJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVUcmVlKGRlZXBDbG9uZSh0aGlzLnNlcnZpY2VSb3V0ZXMpLCAnLycsIGNoZWNrZWRLZXlzKQ0KDQogICAgICBpZiAoaXNFZGl0KSB7DQogICAgICAgIGF3YWl0IHVwZGF0ZVJvbGUodGhpcy5yb2xlLmtleSwgdGhpcy5yb2xlKQ0KICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5yb2xlc0xpc3QubGVuZ3RoOyBpbmRleCsrKSB7DQogICAgICAgICAgaWYgKHRoaXMucm9sZXNMaXN0W2luZGV4XS5rZXkgPT09IHRoaXMucm9sZS5rZXkpIHsNCiAgICAgICAgICAgIHRoaXMucm9sZXNMaXN0LnNwbGljZShpbmRleCwgMSwgT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5yb2xlKSkNCiAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGFkZFJvbGUodGhpcy5yb2xlKQ0KICAgICAgICB0aGlzLnJvbGUua2V5ID0gZGF0YS5rZXkNCiAgICAgICAgdGhpcy5yb2xlc0xpc3QucHVzaCh0aGlzLnJvbGUpDQogICAgICB9DQoNCiAgICAgIGNvbnN0IHsgZGVzY3JpcHRpb24sIGtleSwgbmFtZSB9ID0gdGhpcy5yb2xlDQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQ0KICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywNCiAgICAgICAgZGFuZ2Vyb3VzbHlVc2VIVE1MU3RyaW5nOiB0cnVlLA0KICAgICAgICBtZXNzYWdlOiBgDQogICAgICAgICAgICA8ZGl2PlJvbGUgS2V5OiAke2tleX08L2Rpdj4NCiAgICAgICAgICAgIDxkaXY+Um9sZSBOYW1lOiAke25hbWV9PC9kaXY+DQogICAgICAgICAgICA8ZGl2PkRlc2NyaXB0aW9uOiAke2Rlc2NyaXB0aW9ufTwvZGl2Pg0KICAgICAgICAgIGAsDQogICAgICAgIHR5cGU6ICdzdWNjZXNzJw0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIHJlZmVyZW5jZTogc3JjL3ZpZXcvbGF5b3V0L2NvbXBvbmVudHMvU2lkZWJhci9TaWRlYmFySXRlbS52dWUNCiAgICBvbmx5T25lU2hvd2luZ0NoaWxkKGNoaWxkcmVuID0gW10sIHBhcmVudCkgew0KICAgICAgbGV0IG9ubHlPbmVDaGlsZCA9IG51bGwNCiAgICAgIGNvbnN0IHNob3dpbmdDaGlsZHJlbiA9IGNoaWxkcmVuLmZpbHRlcihpdGVtID0+ICFpdGVtLmhpZGRlbikNCg0KICAgICAgLy8gV2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBjaGlsZCByb3V0ZSwgdGhlIGNoaWxkIHJvdXRlIGlzIGRpc3BsYXllZCBieSBkZWZhdWx0DQogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMSkgew0KICAgICAgICBvbmx5T25lQ2hpbGQgPSBzaG93aW5nQ2hpbGRyZW5bMF0NCiAgICAgICAgb25seU9uZUNoaWxkLnBhdGggPSBwYXRoLnJlc29sdmUocGFyZW50LnBhdGgsIG9ubHlPbmVDaGlsZC5wYXRoKQ0KICAgICAgICByZXR1cm4gb25seU9uZUNoaWxkDQogICAgICB9DQoNCiAgICAgIC8vIFNob3cgcGFyZW50IGlmIHRoZXJlIGFyZSBubyBjaGlsZCByb3V0ZSB0byBkaXNwbGF5DQogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICBvbmx5T25lQ2hpbGQgPSB7IC4uLiBwYXJlbnQsIHBhdGg6ICcnLCBub1Nob3dpbmdDaGlsZHJlbjogdHJ1ZSB9DQogICAgICAgIHJldHVybiBvbmx5T25lQ2hpbGQNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"role.vue","sourceRoot":"src/views/permission","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-button type=\"primary\" @click=\"handleAddRole\">New Role</el-button>\r\n\r\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\r\n      <el-table-column align=\"center\" label=\"Role Key\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.key }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Role Name\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.name }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"Description\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.description }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Operations\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">Edit</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">Delete</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'Edit Role':'New Role'\">\r\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"role.name\" placeholder=\"Role Name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Desc\">\r\n          <el-input\r\n            v-model=\"role.description\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\r\n            type=\"textarea\"\r\n            placeholder=\"Role Description\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Menus\">\r\n          <el-tree\r\n            ref=\"tree\"\r\n            :check-strictly=\"checkStrictly\"\r\n            :data=\"routesData\"\r\n            :props=\"defaultProps\"\r\n            show-checkbox\r\n            node-key=\"path\"\r\n            class=\"permission-tree\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align:right;\">\r\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmRole\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport path from 'path'\r\nimport { deepClone } from '@/utils'\r\nimport { getRoutes, getRoles, addRole, deleteRole, updateRole } from '@/api/role'\r\n\r\nconst defaultRole = {\r\n  key: '',\r\n  name: '',\r\n  description: '',\r\n  routes: []\r\n}\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      role: Object.assign({}, defaultRole),\r\n      routes: [],\r\n      rolesList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'new',\r\n      checkStrictly: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    routesData() {\r\n      return this.routes\r\n    }\r\n  },\r\n  created() {\r\n    // Mock: get all routes and roles list from server\r\n    this.getRoutes()\r\n    this.getRoles()\r\n  },\r\n  methods: {\r\n    async getRoutes() {\r\n      const res = await getRoutes()\r\n      this.serviceRoutes = res.data\r\n      this.routes = this.generateRoutes(res.data)\r\n    },\r\n    async getRoles() {\r\n      const res = await getRoles()\r\n      this.rolesList = res.data\r\n    },\r\n\r\n    // Reshape the routes structure so that it looks the same as the sidebar\r\n    generateRoutes(routes, basePath = '/') {\r\n      const res = []\r\n\r\n      for (let route of routes) {\r\n        // skip some route\r\n        if (route.hidden) { continue }\r\n\r\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\r\n\r\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\r\n          route = onlyOneShowingChild\r\n        }\r\n\r\n        const data = {\r\n          path: path.resolve(basePath, route.path),\r\n          title: route.meta && route.meta.title\r\n\r\n        }\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          data.children = this.generateRoutes(route.children, data.path)\r\n        }\r\n        res.push(data)\r\n      }\r\n      return res\r\n    },\r\n    generateArr(routes) {\r\n      let data = []\r\n      routes.forEach(route => {\r\n        data.push(route)\r\n        if (route.children) {\r\n          const temp = this.generateArr(route.children)\r\n          if (temp.length > 0) {\r\n            data = [...data, ...temp]\r\n          }\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    handleAddRole() {\r\n      this.role = Object.assign({}, defaultRole)\r\n      if (this.$refs.tree) {\r\n        this.$refs.tree.setCheckedNodes([])\r\n      }\r\n      this.dialogType = 'new'\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(scope) {\r\n      this.dialogType = 'edit'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.role = deepClone(scope.row)\r\n      this.$nextTick(() => {\r\n        const routes = this.generateRoutes(this.role.routes)\r\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\r\n        // set checked state of a node not affects its father and child nodes\r\n        this.checkStrictly = false\r\n      })\r\n    },\r\n    handleDelete({ $index, row }) {\r\n      this.$confirm('Confirm to remove the role?', 'Warning', {\r\n        confirmButtonText: 'Confirm',\r\n        cancelButtonText: 'Cancel',\r\n        type: 'warning'\r\n      })\r\n        .then(async() => {\r\n          await deleteRole(row.key)\r\n          this.rolesList.splice($index, 1)\r\n          this.$message({\r\n            type: 'success',\r\n            message: 'Delete succed!'\r\n          })\r\n        })\r\n        .catch(err => { console.error(err) })\r\n    },\r\n    generateTree(routes, basePath = '/', checkedKeys) {\r\n      const res = []\r\n\r\n      for (const route of routes) {\r\n        const routePath = path.resolve(basePath, route.path)\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          route.children = this.generateTree(route.children, routePath, checkedKeys)\r\n        }\r\n\r\n        if (checkedKeys.includes(routePath) || (route.children && route.children.length >= 1)) {\r\n          res.push(route)\r\n        }\r\n      }\r\n      return res\r\n    },\r\n    async confirmRole() {\r\n      const isEdit = this.dialogType === 'edit'\r\n\r\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\r\n      this.role.routes = this.generateTree(deepClone(this.serviceRoutes), '/', checkedKeys)\r\n\r\n      if (isEdit) {\r\n        await updateRole(this.role.key, this.role)\r\n        for (let index = 0; index < this.rolesList.length; index++) {\r\n          if (this.rolesList[index].key === this.role.key) {\r\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\r\n            break\r\n          }\r\n        }\r\n      } else {\r\n        const { data } = await addRole(this.role)\r\n        this.role.key = data.key\r\n        this.rolesList.push(this.role)\r\n      }\r\n\r\n      const { description, key, name } = this.role\r\n      this.dialogVisible = false\r\n      this.$notify({\r\n        title: 'Success',\r\n        dangerouslyUseHTMLString: true,\r\n        message: `\r\n            <div>Role Key: ${key}</div>\r\n            <div>Role Name: ${name}</div>\r\n            <div>Description: ${description}</div>\r\n          `,\r\n        type: 'success'\r\n      })\r\n    },\r\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\r\n    onlyOneShowingChild(children = [], parent) {\r\n      let onlyOneChild = null\r\n      const showingChildren = children.filter(item => !item.hidden)\r\n\r\n      // When there is only one child route, the child route is displayed by default\r\n      if (showingChildren.length === 1) {\r\n        onlyOneChild = showingChildren[0]\r\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\r\n        return onlyOneChild\r\n      }\r\n\r\n      // Show parent if there are no child route to display\r\n      if (showingChildren.length === 0) {\r\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\r\n        return onlyOneChild\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-container {\r\n  .roles-table {\r\n    margin-top: 30px;\r\n  }\r\n  .permission-tree {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n</style>\r\n"]}]}