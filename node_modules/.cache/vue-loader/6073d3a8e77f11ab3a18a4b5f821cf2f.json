{"remainingRequest":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\data\\git\\vue-admin\\vue-element-admin\\src\\components\\Dropzone\\index.vue?vue&type=style&index=0&id=0248200e&scoped=true&lang=css&","dependencies":[{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\src\\components\\Dropzone\\index.vue","mtime":1636272798131},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kcm9wem9uZSB7CiAgICBib3JkZXI6IDJweCBzb2xpZCAjRTVFNUU1OwogICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmOwogICAgY29sb3I6ICM3Nzc7CiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4ycyBsaW5lYXI7CiAgICBwYWRkaW5nOiA1cHg7Cn0KCi5kcm9wem9uZTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjZGNkY2Owp9CgppIHsKICAgIGNvbG9yOiAjQ0NDOwp9CgouZHJvcHpvbmUgLmR6LWltYWdlIGltZyB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKfQoKLmRyb3B6b25lIGlucHV0W25hbWU9J2ZpbGUnXSB7CiAgICBkaXNwbGF5OiBub25lOwp9CgouZHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWltYWdlIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKfQoKLmRyb3B6b25lIC5kei1wcmV2aWV3OmhvdmVyIC5kei1pbWFnZSBpbWcgewogICAgdHJhbnNmb3JtOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KCi5kcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyB7CiAgICBib3R0b206IDBweDsKICAgIHRvcDogMHB4OwogICAgY29sb3I6IHdoaXRlOwogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMywgMTUwLCAyNDMsIDAuOCk7CiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBsaW5lYXI7CiAgICB0ZXh0LWFsaWduOiBsZWZ0Owp9CgouZHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWRldGFpbHMgLmR6LWZpbGVuYW1lIHNwYW4sIC5kcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyAuZHotc2l6ZSBzcGFuIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Owp9CgouZHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWRldGFpbHMgLmR6LWZpbGVuYW1lOm5vdCg6aG92ZXIpIHNwYW4gewogICAgYm9yZGVyOiBub25lOwp9CgouZHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWRldGFpbHMgLmR6LWZpbGVuYW1lOmhvdmVyIHNwYW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi5kcm9wem9uZSAuZHotcHJldmlldyAuZHotcmVtb3ZlIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHotaW5kZXg6IDMwOwogICAgY29sb3I6IHdoaXRlOwogICAgbWFyZ2luLWxlZnQ6IDE1cHg7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgdG9wOiBpbmhlcml0OwogICAgYm90dG9tOiAxNXB4OwogICAgYm9yZGVyOiAycHggd2hpdGUgc29saWQ7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgZm9udC1zaXplOiAwLjhyZW07CiAgICBmb250LXdlaWdodDogODAwOwogICAgbGV0dGVyLXNwYWNpbmc6IDEuMXB4OwogICAgb3BhY2l0eTogMDsKfQoKLmRyb3B6b25lIC5kei1wcmV2aWV3OmhvdmVyIC5kei1yZW1vdmUgewogICAgb3BhY2l0eTogMTsKfQoKLmRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1zdWNjZXNzLW1hcmssIC5kcm9wem9uZSAuZHotcHJldmlldyAuZHotZXJyb3ItbWFyayB7CiAgICBtYXJnaW4tbGVmdDogLTQwcHg7CiAgICBtYXJnaW4tdG9wOiAtNTBweDsKfQoKLmRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1zdWNjZXNzLW1hcmsgaSwgLmRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1lcnJvci1tYXJrIGkgewogICAgY29sb3I6IHdoaXRlOwogICAgZm9udC1zaXplOiA1cmVtOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Dropzone","sourcesContent":["<template>\r\n  <div :id=\"id\" :ref=\"id\" :action=\"url\" class=\"dropzone\">\r\n    <input type=\"file\" name=\"file\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Dropzone from 'dropzone'\r\nimport 'dropzone/dist/dropzone.css'\r\n// import { getToken } from 'api/qiniu';\r\n\r\nDropzone.autoDiscover = false\r\n\r\nexport default {\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    url: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    clickable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    defaultMsg: {\r\n      type: String,\r\n      default: '上传图片'\r\n    },\r\n    acceptedFiles: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    thumbnailHeight: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    thumbnailWidth: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    showRemoveLink: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    maxFilesize: {\r\n      type: Number,\r\n      default: 2\r\n    },\r\n    maxFiles: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    autoProcessQueue: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    useCustomDropzoneOptions: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    defaultImg: {\r\n      default: '',\r\n      type: [String, Array]\r\n    },\r\n    couldPaste: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dropzone: '',\r\n      initOnce: true\r\n    }\r\n  },\r\n  watch: {\r\n    defaultImg(val) {\r\n      if (val.length === 0) {\r\n        this.initOnce = false\r\n        return\r\n      }\r\n      if (!this.initOnce) return\r\n      this.initImages(val)\r\n      this.initOnce = false\r\n    }\r\n  },\r\n  mounted() {\r\n    const element = document.getElementById(this.id)\r\n    const vm = this\r\n    this.dropzone = new Dropzone(element, {\r\n      clickable: this.clickable,\r\n      thumbnailWidth: this.thumbnailWidth,\r\n      thumbnailHeight: this.thumbnailHeight,\r\n      maxFiles: this.maxFiles,\r\n      maxFilesize: this.maxFilesize,\r\n      dictRemoveFile: 'Remove',\r\n      addRemoveLinks: this.showRemoveLink,\r\n      acceptedFiles: this.acceptedFiles,\r\n      autoProcessQueue: this.autoProcessQueue,\r\n      dictDefaultMessage: '<i style=\"margin-top: 3em;display: inline-block\" class=\"material-icons\">' + this.defaultMsg + '</i><br>Drop files here to upload',\r\n      dictMaxFilesExceeded: '只能一个图',\r\n      previewTemplate: '<div class=\"dz-preview dz-file-preview\">  <div class=\"dz-image\" style=\"width:' + this.thumbnailWidth + 'px;height:' + this.thumbnailHeight + 'px\" ><img style=\"width:' + this.thumbnailWidth + 'px;height:' + this.thumbnailHeight + 'px\" data-dz-thumbnail /></div>  <div class=\"dz-details\"><div class=\"dz-size\"><span data-dz-size></span></div> <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>  <div class=\"dz-success-mark\"> <i class=\"material-icons\">done</i> </div>  <div class=\"dz-error-mark\"><i class=\"material-icons\">error</i></div></div>',\r\n      init() {\r\n        const val = vm.defaultImg\r\n        if (!val) return\r\n        if (Array.isArray(val)) {\r\n          if (val.length === 0) return\r\n          val.map((v, i) => {\r\n            const mockFile = { name: 'name' + i, size: 12345, url: v }\r\n            this.options.addedfile.call(this, mockFile)\r\n            this.options.thumbnail.call(this, mockFile, v)\r\n            mockFile.previewElement.classList.add('dz-success')\r\n            mockFile.previewElement.classList.add('dz-complete')\r\n            vm.initOnce = false\r\n            return true\r\n          })\r\n        } else {\r\n          const mockFile = { name: 'name', size: 12345, url: val }\r\n          this.options.addedfile.call(this, mockFile)\r\n          this.options.thumbnail.call(this, mockFile, val)\r\n          mockFile.previewElement.classList.add('dz-success')\r\n          mockFile.previewElement.classList.add('dz-complete')\r\n          vm.initOnce = false\r\n        }\r\n      },\r\n      accept: (file, done) => {\r\n        /* 七牛*/\r\n        // const token = this.$store.getters.token;\r\n        // getToken(token).then(response => {\r\n        //   file.token = response.data.qiniu_token;\r\n        //   file.key = response.data.qiniu_key;\r\n        //   file.url = response.data.qiniu_url;\r\n        //   done();\r\n        // })\r\n        done()\r\n      },\r\n      sending: (file, xhr, formData) => {\r\n        // formData.append('token', file.token);\r\n        // formData.append('key', file.key);\r\n        vm.initOnce = false\r\n      }\r\n    })\r\n\r\n    if (this.couldPaste) {\r\n      document.addEventListener('paste', this.pasteImg)\r\n    }\r\n\r\n    this.dropzone.on('success', file => {\r\n      vm.$emit('dropzone-success', file, vm.dropzone.element)\r\n    })\r\n    this.dropzone.on('addedfile', file => {\r\n      vm.$emit('dropzone-fileAdded', file)\r\n    })\r\n    this.dropzone.on('removedfile', file => {\r\n      vm.$emit('dropzone-removedFile', file)\r\n    })\r\n    this.dropzone.on('error', (file, error, xhr) => {\r\n      vm.$emit('dropzone-error', file, error, xhr)\r\n    })\r\n    this.dropzone.on('successmultiple', (file, error, xhr) => {\r\n      vm.$emit('dropzone-successmultiple', file, error, xhr)\r\n    })\r\n  },\r\n  destroyed() {\r\n    document.removeEventListener('paste', this.pasteImg)\r\n    this.dropzone.destroy()\r\n  },\r\n  methods: {\r\n    removeAllFiles() {\r\n      this.dropzone.removeAllFiles(true)\r\n    },\r\n    processQueue() {\r\n      this.dropzone.processQueue()\r\n    },\r\n    pasteImg(event) {\r\n      const items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n      if (items[0].kind === 'file') {\r\n        this.dropzone.addFile(items[0].getAsFile())\r\n      }\r\n    },\r\n    initImages(val) {\r\n      if (!val) return\r\n      if (Array.isArray(val)) {\r\n        val.map((v, i) => {\r\n          const mockFile = { name: 'name' + i, size: 12345, url: v }\r\n          this.dropzone.options.addedfile.call(this.dropzone, mockFile)\r\n          this.dropzone.options.thumbnail.call(this.dropzone, mockFile, v)\r\n          mockFile.previewElement.classList.add('dz-success')\r\n          mockFile.previewElement.classList.add('dz-complete')\r\n          return true\r\n        })\r\n      } else {\r\n        const mockFile = { name: 'name', size: 12345, url: val }\r\n        this.dropzone.options.addedfile.call(this.dropzone, mockFile)\r\n        this.dropzone.options.thumbnail.call(this.dropzone, mockFile, val)\r\n        mockFile.previewElement.classList.add('dz-success')\r\n        mockFile.previewElement.classList.add('dz-complete')\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .dropzone {\r\n        border: 2px solid #E5E5E5;\r\n        font-family: 'Roboto', sans-serif;\r\n        color: #777;\r\n        transition: background-color .2s linear;\r\n        padding: 5px;\r\n    }\r\n\r\n    .dropzone:hover {\r\n        background-color: #F6F6F6;\r\n    }\r\n\r\n    i {\r\n        color: #CCC;\r\n    }\r\n\r\n    .dropzone .dz-image img {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .dropzone input[name='file'] {\r\n        display: none;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-image {\r\n        border-radius: 0px;\r\n    }\r\n\r\n    .dropzone .dz-preview:hover .dz-image img {\r\n        transform: none;\r\n        filter: none;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-details {\r\n        bottom: 0px;\r\n        top: 0px;\r\n        color: white;\r\n        background-color: rgba(33, 150, 243, 0.8);\r\n        transition: opacity .2s linear;\r\n        text-align: left;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\r\n        background-color: transparent;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\r\n        border: none;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-details .dz-filename:hover span {\r\n        background-color: transparent;\r\n        border: none;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-remove {\r\n        position: absolute;\r\n        z-index: 30;\r\n        color: white;\r\n        margin-left: 15px;\r\n        padding: 10px;\r\n        top: inherit;\r\n        bottom: 15px;\r\n        border: 2px white solid;\r\n        text-decoration: none;\r\n        text-transform: uppercase;\r\n        font-size: 0.8rem;\r\n        font-weight: 800;\r\n        letter-spacing: 1.1px;\r\n        opacity: 0;\r\n    }\r\n\r\n    .dropzone .dz-preview:hover .dz-remove {\r\n        opacity: 1;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\r\n        margin-left: -40px;\r\n        margin-top: -50px;\r\n    }\r\n\r\n    .dropzone .dz-preview .dz-success-mark i, .dropzone .dz-preview .dz-error-mark i {\r\n        color: white;\r\n        font-size: 5rem;\r\n    }\r\n</style>\r\n"]}]}