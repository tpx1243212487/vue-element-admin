{"remainingRequest":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\permission\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\permission\\role.vue","mtime":1636272798282},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcGF0aCBmcm9tICdwYXRoJw0KaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQC91dGlscycNCmltcG9ydCB7IGdldFJvdXRlcywgZ2V0Um9sZXMsIGFkZFJvbGUsIGRlbGV0ZVJvbGUsIHVwZGF0ZVJvbGUgfSBmcm9tICdAL2FwaS9yb2xlJw0KDQpjb25zdCBkZWZhdWx0Um9sZSA9IHsNCiAga2V5OiAnJywNCiAgbmFtZTogJycsDQogIGRlc2NyaXB0aW9uOiAnJywNCiAgcm91dGVzOiBbXQ0KfQ0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHJvbGU6IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRSb2xlKSwNCiAgICAgIHJvdXRlczogW10sDQogICAgICByb2xlc0xpc3Q6IFtdLA0KICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICBkaWFsb2dUeXBlOiAnbmV3JywNCiAgICAgIGNoZWNrU3RyaWN0bHk6IGZhbHNlLA0KICAgICAgZGVmYXVsdFByb3BzOiB7DQogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLA0KICAgICAgICBsYWJlbDogJ3RpdGxlJw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICByb3V0ZXNEYXRhKCkgew0KICAgICAgcmV0dXJuIHRoaXMucm91dGVzDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIC8vIE1vY2s6IGdldCBhbGwgcm91dGVzIGFuZCByb2xlcyBsaXN0IGZyb20gc2VydmVyDQogICAgdGhpcy5nZXRSb3V0ZXMoKQ0KICAgIHRoaXMuZ2V0Um9sZXMoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0Um91dGVzKCkgew0KICAgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0Um91dGVzKCkNCiAgICAgIHRoaXMuc2VydmljZVJvdXRlcyA9IHJlcy5kYXRhDQogICAgICB0aGlzLnJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVSb3V0ZXMocmVzLmRhdGEpDQogICAgfSwNCiAgICBhc3luYyBnZXRSb2xlcygpIHsNCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFJvbGVzKCkNCiAgICAgIHRoaXMucm9sZXNMaXN0ID0gcmVzLmRhdGENCiAgICB9LA0KDQogICAgLy8gUmVzaGFwZSB0aGUgcm91dGVzIHN0cnVjdHVyZSBzbyB0aGF0IGl0IGxvb2tzIHRoZSBzYW1lIGFzIHRoZSBzaWRlYmFyDQogICAgZ2VuZXJhdGVSb3V0ZXMocm91dGVzLCBiYXNlUGF0aCA9ICcvJykgew0KICAgICAgY29uc3QgcmVzID0gW10NCg0KICAgICAgZm9yIChsZXQgcm91dGUgb2Ygcm91dGVzKSB7DQogICAgICAgIC8vIHNraXAgc29tZSByb3V0ZQ0KICAgICAgICBpZiAocm91dGUuaGlkZGVuKSB7IGNvbnRpbnVlIH0NCg0KICAgICAgICBjb25zdCBvbmx5T25lU2hvd2luZ0NoaWxkID0gdGhpcy5vbmx5T25lU2hvd2luZ0NoaWxkKHJvdXRlLmNoaWxkcmVuLCByb3V0ZSkNCg0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgb25seU9uZVNob3dpbmdDaGlsZCAmJiAhcm91dGUuYWx3YXlzU2hvdykgew0KICAgICAgICAgIHJvdXRlID0gb25seU9uZVNob3dpbmdDaGlsZA0KICAgICAgICB9DQoNCiAgICAgICAgY29uc3QgZGF0YSA9IHsNCiAgICAgICAgICBwYXRoOiBwYXRoLnJlc29sdmUoYmFzZVBhdGgsIHJvdXRlLnBhdGgpLA0KICAgICAgICAgIHRpdGxlOiByb3V0ZS5tZXRhICYmIHJvdXRlLm1ldGEudGl0bGUNCg0KICAgICAgICB9DQoNCiAgICAgICAgLy8gcmVjdXJzaXZlIGNoaWxkIHJvdXRlcw0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4pIHsNCiAgICAgICAgICBkYXRhLmNoaWxkcmVuID0gdGhpcy5nZW5lcmF0ZVJvdXRlcyhyb3V0ZS5jaGlsZHJlbiwgZGF0YS5wYXRoKQ0KICAgICAgICB9DQogICAgICAgIHJlcy5wdXNoKGRhdGEpDQogICAgICB9DQogICAgICByZXR1cm4gcmVzDQogICAgfSwNCiAgICBnZW5lcmF0ZUFycihyb3V0ZXMpIHsNCiAgICAgIGxldCBkYXRhID0gW10NCiAgICAgIHJvdXRlcy5mb3JFYWNoKHJvdXRlID0+IHsNCiAgICAgICAgZGF0YS5wdXNoKHJvdXRlKQ0KICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4pIHsNCiAgICAgICAgICBjb25zdCB0ZW1wID0gdGhpcy5nZW5lcmF0ZUFycihyb3V0ZS5jaGlsZHJlbikNCiAgICAgICAgICBpZiAodGVtcC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICBkYXRhID0gWy4uLmRhdGEsIC4uLnRlbXBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgcmV0dXJuIGRhdGENCiAgICB9LA0KICAgIGhhbmRsZUFkZFJvbGUoKSB7DQogICAgICB0aGlzLnJvbGUgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Um9sZSkNCiAgICAgIGlmICh0aGlzLiRyZWZzLnRyZWUpIHsNCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWROb2RlcyhbXSkNCiAgICAgIH0NCiAgICAgIHRoaXMuZGlhbG9nVHlwZSA9ICduZXcnDQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlDQogICAgfSwNCiAgICBoYW5kbGVFZGl0KHNjb3BlKSB7DQogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnZWRpdCcNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUNCiAgICAgIHRoaXMuY2hlY2tTdHJpY3RseSA9IHRydWUNCiAgICAgIHRoaXMucm9sZSA9IGRlZXBDbG9uZShzY29wZS5yb3cpDQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIGNvbnN0IHJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVSb3V0ZXModGhpcy5yb2xlLnJvdXRlcykNCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWROb2Rlcyh0aGlzLmdlbmVyYXRlQXJyKHJvdXRlcykpDQogICAgICAgIC8vIHNldCBjaGVja2VkIHN0YXRlIG9mIGEgbm9kZSBub3QgYWZmZWN0cyBpdHMgZmF0aGVyIGFuZCBjaGlsZCBub2Rlcw0KICAgICAgICB0aGlzLmNoZWNrU3RyaWN0bHkgPSBmYWxzZQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGhhbmRsZURlbGV0ZSh7ICRpbmRleCwgcm93IH0pIHsNCiAgICAgIHRoaXMuJGNvbmZpcm0oJ0NvbmZpcm0gdG8gcmVtb3ZlIHRoZSByb2xlPycsICdXYXJuaW5nJywgew0KICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ0NvbmZpcm0nLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICB9KQ0KICAgICAgICAudGhlbihhc3luYygpID0+IHsNCiAgICAgICAgICBhd2FpdCBkZWxldGVSb2xlKHJvdy5rZXkpDQogICAgICAgICAgdGhpcy5yb2xlc0xpc3Quc3BsaWNlKCRpbmRleCwgMSkNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgIG1lc3NhZ2U6ICdEZWxldGUgc3VjY2VkIScNCiAgICAgICAgICB9KQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZXJyID0+IHsgY29uc29sZS5lcnJvcihlcnIpIH0pDQogICAgfSwNCiAgICBnZW5lcmF0ZVRyZWUocm91dGVzLCBiYXNlUGF0aCA9ICcvJywgY2hlY2tlZEtleXMpIHsNCiAgICAgIGNvbnN0IHJlcyA9IFtdDQoNCiAgICAgIGZvciAoY29uc3Qgcm91dGUgb2Ygcm91dGVzKSB7DQogICAgICAgIGNvbnN0IHJvdXRlUGF0aCA9IHBhdGgucmVzb2x2ZShiYXNlUGF0aCwgcm91dGUucGF0aCkNCg0KICAgICAgICAvLyByZWN1cnNpdmUgY2hpbGQgcm91dGVzDQogICAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbikgew0KICAgICAgICAgIHJvdXRlLmNoaWxkcmVuID0gdGhpcy5nZW5lcmF0ZVRyZWUocm91dGUuY2hpbGRyZW4sIHJvdXRlUGF0aCwgY2hlY2tlZEtleXMpDQogICAgICAgIH0NCg0KICAgICAgICBpZiAoY2hlY2tlZEtleXMuaW5jbHVkZXMocm91dGVQYXRoKSB8fCAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID49IDEpKSB7DQogICAgICAgICAgcmVzLnB1c2gocm91dGUpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHJldHVybiByZXMNCiAgICB9LA0KICAgIGFzeW5jIGNvbmZpcm1Sb2xlKCkgew0KICAgICAgY29uc3QgaXNFZGl0ID0gdGhpcy5kaWFsb2dUeXBlID09PSAnZWRpdCcNCg0KICAgICAgY29uc3QgY2hlY2tlZEtleXMgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZEtleXMoKQ0KICAgICAgdGhpcy5yb2xlLnJvdXRlcyA9IHRoaXMuZ2VuZXJhdGVUcmVlKGRlZXBDbG9uZSh0aGlzLnNlcnZpY2VSb3V0ZXMpLCAnLycsIGNoZWNrZWRLZXlzKQ0KDQogICAgICBpZiAoaXNFZGl0KSB7DQogICAgICAgIGF3YWl0IHVwZGF0ZVJvbGUodGhpcy5yb2xlLmtleSwgdGhpcy5yb2xlKQ0KICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5yb2xlc0xpc3QubGVuZ3RoOyBpbmRleCsrKSB7DQogICAgICAgICAgaWYgKHRoaXMucm9sZXNMaXN0W2luZGV4XS5rZXkgPT09IHRoaXMucm9sZS5rZXkpIHsNCiAgICAgICAgICAgIHRoaXMucm9sZXNMaXN0LnNwbGljZShpbmRleCwgMSwgT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5yb2xlKSkNCiAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGFkZFJvbGUodGhpcy5yb2xlKQ0KICAgICAgICB0aGlzLnJvbGUua2V5ID0gZGF0YS5rZXkNCiAgICAgICAgdGhpcy5yb2xlc0xpc3QucHVzaCh0aGlzLnJvbGUpDQogICAgICB9DQoNCiAgICAgIGNvbnN0IHsgZGVzY3JpcHRpb24sIGtleSwgbmFtZSB9ID0gdGhpcy5yb2xlDQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQ0KICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywNCiAgICAgICAgZGFuZ2Vyb3VzbHlVc2VIVE1MU3RyaW5nOiB0cnVlLA0KICAgICAgICBtZXNzYWdlOiBgDQogICAgICAgICAgICA8ZGl2PlJvbGUgS2V5OiAke2tleX08L2Rpdj4NCiAgICAgICAgICAgIDxkaXY+Um9sZSBOYW1lOiAke25hbWV9PC9kaXY+DQogICAgICAgICAgICA8ZGl2PkRlc2NyaXB0aW9uOiAke2Rlc2NyaXB0aW9ufTwvZGl2Pg0KICAgICAgICAgIGAsDQogICAgICAgIHR5cGU6ICdzdWNjZXNzJw0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIHJlZmVyZW5jZTogc3JjL3ZpZXcvbGF5b3V0L2NvbXBvbmVudHMvU2lkZWJhci9TaWRlYmFySXRlbS52dWUNCiAgICBvbmx5T25lU2hvd2luZ0NoaWxkKGNoaWxkcmVuID0gW10sIHBhcmVudCkgew0KICAgICAgbGV0IG9ubHlPbmVDaGlsZCA9IG51bGwNCiAgICAgIGNvbnN0IHNob3dpbmdDaGlsZHJlbiA9IGNoaWxkcmVuLmZpbHRlcihpdGVtID0+ICFpdGVtLmhpZGRlbikNCg0KICAgICAgLy8gV2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBjaGlsZCByb3V0ZSwgdGhlIGNoaWxkIHJvdXRlIGlzIGRpc3BsYXllZCBieSBkZWZhdWx0DQogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMSkgew0KICAgICAgICBvbmx5T25lQ2hpbGQgPSBzaG93aW5nQ2hpbGRyZW5bMF0NCiAgICAgICAgb25seU9uZUNoaWxkLnBhdGggPSBwYXRoLnJlc29sdmUocGFyZW50LnBhdGgsIG9ubHlPbmVDaGlsZC5wYXRoKQ0KICAgICAgICByZXR1cm4gb25seU9uZUNoaWxkDQogICAgICB9DQoNCiAgICAgIC8vIFNob3cgcGFyZW50IGlmIHRoZXJlIGFyZSBubyBjaGlsZCByb3V0ZSB0byBkaXNwbGF5DQogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICBvbmx5T25lQ2hpbGQgPSB7IC4uLiBwYXJlbnQsIHBhdGg6ICcnLCBub1Nob3dpbmdDaGlsZHJlbjogdHJ1ZSB9DQogICAgICAgIHJldHVybiBvbmx5T25lQ2hpbGQNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfQ0KICB9DQp9DQo="},null]}