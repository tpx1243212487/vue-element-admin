{"remainingRequest":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\table\\drag-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\src\\views\\table\\drag-table.vue","mtime":1636272798298},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\data\\git\\vue-admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBmZXRjaExpc3QgfSBmcm9tICdAL2FwaS9hcnRpY2xlJw0KaW1wb3J0IFNvcnRhYmxlIGZyb20gJ3NvcnRhYmxlanMnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0RyYWdUYWJsZScsDQogIGZpbHRlcnM6IHsNCiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7DQogICAgICBjb25zdCBzdGF0dXNNYXAgPSB7DQogICAgICAgIHB1Ymxpc2hlZDogJ3N1Y2Nlc3MnLA0KICAgICAgICBkcmFmdDogJ2luZm8nLA0KICAgICAgICBkZWxldGVkOiAnZGFuZ2VyJw0KICAgICAgfQ0KICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdDQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBsaXN0OiBudWxsLA0KICAgICAgdG90YWw6IG51bGwsDQogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwNCiAgICAgIGxpc3RRdWVyeTogew0KICAgICAgICBwYWdlOiAxLA0KICAgICAgICBsaW1pdDogMTANCiAgICAgIH0sDQogICAgICBzb3J0YWJsZTogbnVsbCwNCiAgICAgIG9sZExpc3Q6IFtdLA0KICAgICAgbmV3TGlzdDogW10NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRMaXN0KCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGdldExpc3QoKSB7DQogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQ0KICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBmZXRjaExpc3QodGhpcy5saXN0UXVlcnkpDQogICAgICB0aGlzLmxpc3QgPSBkYXRhLml0ZW1zDQogICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbA0KICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlDQogICAgICB0aGlzLm9sZExpc3QgPSB0aGlzLmxpc3QubWFwKHYgPT4gdi5pZCkNCiAgICAgIHRoaXMubmV3TGlzdCA9IHRoaXMub2xkTGlzdC5zbGljZSgpDQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgIHRoaXMuc2V0U29ydCgpDQogICAgICB9KQ0KICAgIH0sDQogICAgc2V0U29ydCgpIHsNCiAgICAgIGNvbnN0IGVsID0gdGhpcy4kcmVmcy5kcmFnVGFibGUuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbC10YWJsZV9fYm9keS13cmFwcGVyID4gdGFibGUgPiB0Ym9keScpWzBdDQogICAgICB0aGlzLnNvcnRhYmxlID0gU29ydGFibGUuY3JlYXRlKGVsLCB7DQogICAgICAgIGdob3N0Q2xhc3M6ICdzb3J0YWJsZS1naG9zdCcsIC8vIENsYXNzIG5hbWUgZm9yIHRoZSBkcm9wIHBsYWNlaG9sZGVyLA0KICAgICAgICBzZXREYXRhOiBmdW5jdGlvbihkYXRhVHJhbnNmZXIpIHsNCiAgICAgICAgICAvLyB0byBhdm9pZCBGaXJlZm94IGJ1Zw0KICAgICAgICAgIC8vIERldGFpbCBzZWUgOiBodHRwczovL2dpdGh1Yi5jb20vUnViYVhhL1NvcnRhYmxlL2lzc3Vlcy8xMDEyDQogICAgICAgICAgZGF0YVRyYW5zZmVyLnNldERhdGEoJ1RleHQnLCAnJykNCiAgICAgICAgfSwNCiAgICAgICAgb25FbmQ6IGV2dCA9PiB7DQogICAgICAgICAgY29uc3QgdGFyZ2V0Um93ID0gdGhpcy5saXN0LnNwbGljZShldnQub2xkSW5kZXgsIDEpWzBdDQogICAgICAgICAgdGhpcy5saXN0LnNwbGljZShldnQubmV3SW5kZXgsIDAsIHRhcmdldFJvdykNCg0KICAgICAgICAgIC8vIGZvciBzaG93IHRoZSBjaGFuZ2VzLCB5b3UgY2FuIGRlbGV0ZSBpbiB5b3UgY29kZQ0KICAgICAgICAgIGNvbnN0IHRlbXBJbmRleCA9IHRoaXMubmV3TGlzdC5zcGxpY2UoZXZ0Lm9sZEluZGV4LCAxKVswXQ0KICAgICAgICAgIHRoaXMubmV3TGlzdC5zcGxpY2UoZXZ0Lm5ld0luZGV4LCAwLCB0ZW1wSW5kZXgpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["drag-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"drag-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- Note that row-key is necessary to get a correct row order. -->\r\n    <el-table ref=\"dragTable\" v-loading=\"listLoading\" :data=\"list\" row-key=\"id\" border fit highlight-current-row style=\"width: 100%\">\r\n      <el-table-column align=\"center\" label=\"ID\" width=\"65\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.id }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column width=\"180px\" align=\"center\" label=\"Date\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column min-width=\"300px\" label=\"Title\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.title }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column width=\"110px\" align=\"center\" label=\"Author\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.author }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column width=\"100px\" label=\"Importance\">\r\n        <template slot-scope=\"{row}\">\r\n          <svg-icon v-for=\"n in + row.importance\" :key=\"n\" icon-class=\"star\" class=\"icon-star\" />\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"Readings\" width=\"95\">\r\n        <template slot-scope=\"{row}\">\r\n          <span>{{ row.pageviews }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column class-name=\"status-col\" label=\"Status\" width=\"110\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-tag :type=\"row.status | statusFilter\">\r\n            {{ row.status }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" label=\"Drag\" width=\"80\">\r\n        <template slot-scope=\"{}\">\r\n          <svg-icon class=\"drag-handler\" icon-class=\"drag\" />\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"show-d\">\r\n      <el-tag>The default order :</el-tag> {{ oldList }}\r\n    </div>\r\n    <div class=\"show-d\">\r\n      <el-tag>The after dragging order :</el-tag> {{ newList }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchList } from '@/api/article'\r\nimport Sortable from 'sortablejs'\r\n\r\nexport default {\r\n  name: 'DragTable',\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        published: 'success',\r\n        draft: 'info',\r\n        deleted: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      total: null,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 10\r\n      },\r\n      sortable: null,\r\n      oldList: [],\r\n      newList: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.listLoading = true\r\n      const { data } = await fetchList(this.listQuery)\r\n      this.list = data.items\r\n      this.total = data.total\r\n      this.listLoading = false\r\n      this.oldList = this.list.map(v => v.id)\r\n      this.newList = this.oldList.slice()\r\n      this.$nextTick(() => {\r\n        this.setSort()\r\n      })\r\n    },\r\n    setSort() {\r\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\r\n      this.sortable = Sortable.create(el, {\r\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\r\n        setData: function(dataTransfer) {\r\n          // to avoid Firefox bug\r\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\r\n          dataTransfer.setData('Text', '')\r\n        },\r\n        onEnd: evt => {\r\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\r\n          this.list.splice(evt.newIndex, 0, targetRow)\r\n\r\n          // for show the changes, you can delete in you code\r\n          const tempIndex = this.newList.splice(evt.oldIndex, 1)[0]\r\n          this.newList.splice(evt.newIndex, 0, tempIndex)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.sortable-ghost{\r\n  opacity: .8;\r\n  color: #fff!important;\r\n  background: #42b983!important;\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.icon-star{\r\n  margin-right:2px;\r\n}\r\n.drag-handler{\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n.show-d{\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"]}]}